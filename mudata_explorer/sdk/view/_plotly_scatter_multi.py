# THIS FILE IS AUTOGENERATED

from mudata_explorer import app
from mudata_explorer.sdk.helpers import collapse_params
from muon import MuData


def plotly_scatter_multi(
    mdata: MuData,
    data_axis=0,
    data_x_table=None,
    data_x_cname=None,
    data_x_label='x-axis',
    data_y_table=None,
    data_y_cname=None,
    data_y_label='y-axis',
    data_size_table=None,
    data_size_cname=None,
    data_size_label='size',
    data_size_enabled=True,
    data_rows_query_query_type='',
    data_rows_query_query_table='',
    data_rows_query_query_cname='',
    data_rows_query_query_expr='',
    data_rows_query_query_value='',
    data_cols_query_query_type='',
    data_cols_query_query_table='',
    data_cols_query_query_cname='',
    data_cols_query_query_expr='',
    data_cols_query_query_value='',
    data_transforms=[],
    colors_axis=0,
    colors_tables=[],
    colors_rows_query_query_type='',
    colors_rows_query_query_table='',
    colors_rows_query_query_cname='',
    colors_rows_query_query_expr='',
    colors_rows_query_query_value='',
    colors_cols_query_query_type='',
    colors_cols_query_query_table='',
    colors_cols_query_query_cname='',
    colors_cols_query_query_expr='',
    colors_cols_query_query_value='',
    colors_transforms=[],
    scale_options_log_x=None,
    scale_options_log_y=None,
    scale_options_log_color=None,
    formatting_colorscale='bluered',
    formatting_opacity=1.0,
    formatting_ncols=1,
    formatting_color_label='Abundance',
    **extra_params
):
    """
    
Display a two dimensional distribution of data using Plotly.
Display the same set of points in multiple panels, each of which
is colored by a different column of data.

In addition to the data used for the x- and y-axes, the size
of the points can be set to represent additional dimensions of the data.

Additional formatting options include setting the opacity of the points
and using a log scale for the x- and y-axes.

    """

    assert isinstance(mdata, MuData), "mdata must be a MuData object"
    extra_params = collapse_params(extra_params)

    app.add_view(
        'plotly-scatter-multi',
        mdata,
        params={
            'data.axis': extra_params.get('data_axis', data_axis),
            'data.x.table': extra_params.get('data_x_table', data_x_table),
            'data.x.cname': extra_params.get('data_x_cname', data_x_cname),
            'data.x.label': extra_params.get('data_x_label', data_x_label),
            'data.y.table': extra_params.get('data_y_table', data_y_table),
            'data.y.cname': extra_params.get('data_y_cname', data_y_cname),
            'data.y.label': extra_params.get('data_y_label', data_y_label),
            'data.size.table': extra_params.get('data_size_table', data_size_table),
            'data.size.cname': extra_params.get('data_size_cname', data_size_cname),
            'data.size.label': extra_params.get('data_size_label', data_size_label),
            'data.size.enabled': extra_params.get('data_size_enabled', data_size_enabled),
            'data.rows_query.query.type': extra_params.get('data_rows_query_query_type', data_rows_query_query_type),
            'data.rows_query.query.table': extra_params.get('data_rows_query_query_table', data_rows_query_query_table),
            'data.rows_query.query.cname': extra_params.get('data_rows_query_query_cname', data_rows_query_query_cname),
            'data.rows_query.query.expr': extra_params.get('data_rows_query_query_expr', data_rows_query_query_expr),
            'data.rows_query.query.value': extra_params.get('data_rows_query_query_value', data_rows_query_query_value),
            'data.cols_query.query.type': extra_params.get('data_cols_query_query_type', data_cols_query_query_type),
            'data.cols_query.query.table': extra_params.get('data_cols_query_query_table', data_cols_query_query_table),
            'data.cols_query.query.cname': extra_params.get('data_cols_query_query_cname', data_cols_query_query_cname),
            'data.cols_query.query.expr': extra_params.get('data_cols_query_query_expr', data_cols_query_query_expr),
            'data.cols_query.query.value': extra_params.get('data_cols_query_query_value', data_cols_query_query_value),
            'data.transforms': extra_params.get('data_transforms', data_transforms),
            'colors.axis': extra_params.get('colors_axis', colors_axis),
            'colors.tables': extra_params.get('colors_tables', colors_tables),
            'colors.rows_query.query.type': extra_params.get('colors_rows_query_query_type', colors_rows_query_query_type),
            'colors.rows_query.query.table': extra_params.get('colors_rows_query_query_table', colors_rows_query_query_table),
            'colors.rows_query.query.cname': extra_params.get('colors_rows_query_query_cname', colors_rows_query_query_cname),
            'colors.rows_query.query.expr': extra_params.get('colors_rows_query_query_expr', colors_rows_query_query_expr),
            'colors.rows_query.query.value': extra_params.get('colors_rows_query_query_value', colors_rows_query_query_value),
            'colors.cols_query.query.type': extra_params.get('colors_cols_query_query_type', colors_cols_query_query_type),
            'colors.cols_query.query.table': extra_params.get('colors_cols_query_query_table', colors_cols_query_query_table),
            'colors.cols_query.query.cname': extra_params.get('colors_cols_query_query_cname', colors_cols_query_query_cname),
            'colors.cols_query.query.expr': extra_params.get('colors_cols_query_query_expr', colors_cols_query_query_expr),
            'colors.cols_query.query.value': extra_params.get('colors_cols_query_query_value', colors_cols_query_query_value),
            'colors.transforms': extra_params.get('colors_transforms', colors_transforms),
            'scale_options.log_x': extra_params.get('scale_options_log_x', scale_options_log_x),
            'scale_options.log_y': extra_params.get('scale_options_log_y', scale_options_log_y),
            'scale_options.log_color': extra_params.get('scale_options_log_color', scale_options_log_color),
            'formatting.colorscale': extra_params.get('formatting_colorscale', formatting_colorscale),
            'formatting.opacity': extra_params.get('formatting_opacity', formatting_opacity),
            'formatting.ncols': extra_params.get('formatting_ncols', formatting_ncols),
            'formatting.color_label': extra_params.get('formatting_color_label', formatting_color_label)
        }
    )
